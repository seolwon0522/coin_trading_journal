spring:
  application:
    name: Trading_Bot
  profiles:
    active: local
    
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  datasource:
    url: jdbc:postgresql://localhost:5432/trading_bot
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 1q2w3e4r!

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
      adjust-dates-to-context-time-zone: false
    time-zone: Asia/Seoul

server:
  port: 8080
  servlet:
    context-path: /

logging:
  level:
    org.springframework.security: DEBUG
    com.example.trading_bot: DEBUG
    com.example.trading_bot.auth: DEBUG

# CORS 설정
cors:
  allowed-origins: http://localhost:3000
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  exposed-headers: Authorization
  allow-credentials: true
  max-age: 3600

# JWT 설정
jwt:
  secret: ${JWT_SECRET:mySecretKey12345678901234567890123456789012}
  access-token-validity-in-seconds: 86400 # 24 hours (24 * 60 * 60)
  refresh-token-validity-in-seconds: 604800 # 7 days (7 * 24 * 60 * 60)
  # Legacy - 삭제 예정
  expiration: 86400000 # 24 hours in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds

# Binance API 설정
binance:
  api:
    testnet: true # 테스트넷 사용 (실제 서버: false)
    base-url: https://api.binance.com
    ws-base-url: wss://stream.binance.com:9443
    testnet-base-url: https://testnet.binance.vision
    testnet-ws-base-url: wss://testnet.binance.vision
    connect-timeout: 10000
    read-timeout: 10000
    retry-max-attempts: 3
    retry-delay: 1000

# 암호화 설정
crypto:
  secret-key: ${CRYPTO_SECRET_KEY:mySecretKey123!@#}
  salt: ${CRYPTO_SALT:mySalt456$%^}