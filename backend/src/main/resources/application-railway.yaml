server:
  port: ${PORT:8080}

spring:
  config:
    activate:
      on-profile: railway

  # Database configuration for Railway
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/trading_bot}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Security
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:617965160441-duhprvkkvvhgifgp12osligng8scp8bd.apps.googleusercontent.com}
            client-secret: ${GOOGLE_CLIENT_SECRET:}
            scope:
              - email
              - profile

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:ThisIsAVerySecureJWTSecretKeyForProductionUse1234567890AbcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ}
  access-token-validity-in-seconds: 1800
  refresh-token-validity-in-seconds: 604800

# Crypto Configuration
crypto:
  secret:
    key: ${CRYPTO_SECRET_KEY:3saXgsXn/tNN4CwUzOHLfy23f39UIT/W6uXD5N2HxeY=}

# Binance API Configuration
binance:
  api:
    base-url: https://api.binance.com
    testnet-url: https://testnet.binance.vision
    use-testnet: ${USE_BINANCE_TESTNET:true}
    websocket-url: wss://stream.binance.com:9443
    testnet-websocket-url: wss://testnet.binance.vision
    api-key: ${BINANCE_API_KEY:}
    secret-key: ${BINANCE_SECRET_KEY:}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://frontend-eewqhvu38-seolwon0522s-projects.vercel.app,http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

# Logging
logging:
  level:
    root: INFO
    com.example.trading_bot: INFO
    org.springframework.web: INFO
    org.hibernate: WARN